function init(){Tabletop.init({key:publicSpreadsheetUrl,callback:showInfo,simpleSheet:!0})}function showInfo(t,e){data=t,drawPoints(data)}function loadData(){queue().defer(d3.json,"js/world.json").await(drawMap),init()}function drawMap(t,e){var r=topojson.feature(e,e.objects.countries).features;mapG.append("g").classed("basemap",!0).selectAll("path").data(r).enter().append("path").attr("d",path).style("fill","#dddddd").style("stroke","none")}function drawPoints(t){together=t.filter(function(t){return"Sam & Rosie"==t.name}),rosie=t.filter(function(t){return"Rosie"==t.name}),sam=t.filter(function(t){return"Sam"==t.name}),firsts=t.filter(function(t){return"TRUE"==t.first}),rosie[rosie.length-1].place===sam[sam.length-1].place&&(sameplace=!0),points.selectAll("point.together").data(together).enter().append("circle").attr("class","point together").attr("cx",function(t){return projection(parseCoord(t.lngLat))[0]}).attr("cy",function(t){return projection(parseCoord(t.lngLat))[1]}).attr("r","4").style("fill",function(t){return colour(t.name)}),arcs.selectAll("connection.together").data(together).enter().append("path").attr("class","connection together").attr("d",function(t){return lngLatToArc(t,0)}).style("stroke",function(t){return colour(t.name)}),textsG.selectAll("texts.together").data(firsts).enter().append("text").attr("class","texts together").attr("x",function(t){return projection(parseCoord(t.lngLat))[0]+parseCoord(t.distance)[0]}).attr("y",function(t){return projection(parseCoord(t.lngLat))[1]+parseCoord(t.distance)[1]}).attr("dy",4).style("text-anchor",function(t){return t.anchor}).text(function(t){return t.place}),textsG.selectAll("callouts.together").data(firsts).enter().append("line").attr("class","callouts together").attr("x1",function(t){return projection(parseCoord(t.lngLat))[0]}).attr("y1",function(t){return projection(parseCoord(t.lngLat))[1]}).attr("x2",function(t){return projection(parseCoord(t.lngLat))[0]+parseCoord(t.distance)[0]}).attr("y2",function(t){return projection(parseCoord(t.lngLat))[1]+parseCoord(t.distance)[1]}),sameplace||(points.append("circle").attr("class","point separate sam").attr("cx",projection(parseCoord(sam[sam.length-1].lngLat))[0]).attr("cy",projection(parseCoord(sam[sam.length-1].lngLat))[1]).attr("r",15).style("stroke",colour("Sam")).style("stroke-width",3),points.append("circle").attr("class","point separate rosie").attr("cx",projection(parseCoord(rosie[rosie.length-1].lngLat))[0]).attr("cy",projection(parseCoord(rosie[rosie.length-1].lngLat))[1]).attr("r",15).style("stroke",colour("Rosie")).style("stroke-width",3),points.append("text").attr("class","label").attr("x",projection(parseCoord(rosie[rosie.length-1].lngLat))[0]).attr("y",projection(parseCoord(rosie[rosie.length-1].lngLat))[1]).attr("text-anchor","middle").attr("dy",35).style("fill",colour("Rosie")).style("stroke","white").style("stroke-width",2).text("Rosie"),points.append("text").attr("class","label").attr("x",projection(parseCoord(sam[sam.length-1].lngLat))[0]).attr("y",projection(parseCoord(sam[sam.length-1].lngLat))[1]).attr("text-anchor","middle").attr("dy",35).style("fill",colour("Sam")).style("stroke","white").style("stroke-width",2).text("Sam"),points.append("text").attr("class","label").attr("x",projection(parseCoord(rosie[rosie.length-1].lngLat))[0]).attr("y",projection(parseCoord(rosie[rosie.length-1].lngLat))[1]).attr("text-anchor","middle").attr("dy",35).style("fill",colour("Rosie")).text("Rosie"),points.append("text").attr("class","label").attr("x",projection(parseCoord(sam[sam.length-1].lngLat))[0]).attr("y",projection(parseCoord(sam[sam.length-1].lngLat))[1]).attr("text-anchor","middle").attr("dy",35).style("fill",colour("Sam")).text("Sam"),points.append("text").attr("class","label sub").attr("x",projection(parseCoord(rosie[rosie.length-1].lngLat))[0]).attr("y",projection(parseCoord(rosie[rosie.length-1].lngLat))[1]).attr("text-anchor","middle").attr("dy",50).style("fill",colour("Rosie")).style("stroke","white").style("stroke-width",2).text(rosie[rosie.length-1].place),points.append("text").attr("class","label sub").attr("x",projection(parseCoord(sam[sam.length-1].lngLat))[0]).attr("y",projection(parseCoord(sam[sam.length-1].lngLat))[1]).attr("text-anchor","middle").attr("dy",50).style("fill",colour("Sam")).style("stroke","white").style("stroke-width",2).text(sam[sam.length-1].place),points.append("text").attr("class","label sub").attr("x",projection(parseCoord(rosie[rosie.length-1].lngLat))[0]).attr("y",projection(parseCoord(rosie[rosie.length-1].lngLat))[1]).attr("text-anchor","middle").attr("dy",50).style("fill",colour("Rosie")).text(rosie[rosie.length-1].place),points.append("text").attr("class","label sub").attr("x",projection(parseCoord(sam[sam.length-1].lngLat))[0]).attr("y",projection(parseCoord(sam[sam.length-1].lngLat))[1]).attr("text-anchor","middle").attr("dy",50).style("fill",colour("Sam")).text(sam[sam.length-1].place),arcs.append("path").attr("class","connection separate").attr("d",lngLatToArc(sam[sam.length-1]),0).style("stroke",colour("Sam")),arcs.append("path").attr("class","connection separate").attr("d",lngLatToArc(rosie[rosie.length-1]),0).style("stroke",colour("Rosie")),arcs.append("line").attr("class","toofar").attr("x1",projection(parseCoord(rosie[rosie.length-1].lngLat))[0]).attr("y1",projection(parseCoord(rosie[rosie.length-1].lngLat))[1]).attr("x2",projection(parseCoord(sam[sam.length-1].lngLat))[0]).attr("y2",projection(parseCoord(sam[sam.length-1].lngLat))[1]))}function lngLatToArc(t,e){e=e||1;var r=parseCoord(t.prevLngLat),a=parseCoord(t.lngLat);if(a&&r){var o=projection(r),s=projection(a),n=o[0],l=o[1],i=s[0],p=s[1],c=i-n,d=p-l,g=Math.sqrt(c*c+d*d)*e;return i-n<0?"M"+i+","+p+"A"+g+","+g+" 0 0,1 "+n+","+l:"M"+n+","+l+"A"+g+","+g+" 0 0,1 "+i+","+p}return"M0,0,l0,0z"}function parseCoord(t){return JSON.parse("["+t+"]")[0]}var colour=d3.scale.ordinal().domain(["Sam","Rosie","Sam & Rosie"]).range(["#ffa500","#FF69B4","#ADD8E6"]),direction=d3.scale.ordinal().domain(["NE","NW","SE","SW"]).range([[25,-25],[-25,-25],[25,25],[-25,25]]),anchor=d3.scale.ordinal().domain(["NE","NW","SE","SW"]).range(["start","end","start","end"]),width=$(".map").width(),height=$(".map").height(),sameplace=!1,projection=d3.geo.wagner6().scale(230).center([-25,20]).translate([width/2,height/2]).precision(.1),path=d3.geo.path().projection(projection),svg=d3.select(".map").append("svg").attr("width",width).attr("height",height),defs=svg.append("defs"),mapG=svg.append("g").attr("class","mapG"),textsG=svg.append("g").attr("class","textsG");arcs=svg.append("g").attr("class","arcs"),points=svg.append("g").attr("class","points");var data,publicSpreadsheetUrl="https://docs.google.com/spreadsheets/d/10H4X5yRnubACgBCK1qR_zKJgWA5Mla5wGfqEpbCOugs/edit?usp=sharing";loadData();